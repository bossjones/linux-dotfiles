name: macOS Tests
on:
  push:
    branches:
      - master
      - patch**
      - newlocallab
  pull_request:
    branches:
      - master
      - newlocallab
  release:
    types:
      - created
jobs:
  lint:
    name: Run dotfiles test (Python ${{ matrix.python-version }})
    runs-on: macos-10.15
    strategy:
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        run: |
          pip install poetry==1.0
          python3 -m venv .venv
          source .venv/bin/activate
          pip install ansible | tee -a depslog
          pip install mitogen | tee -a depslog
      - uses: actions/cache@v1
        id: cache-dev-deps
        with:
          path: .venv
          key: venv-dev-${{ runner.os }}-py-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            venv-dev-${{ runner.os }}-py-${{ matrix.python-version }}-poetry-
            venv-dev-${{ runner.os }}-py-${{ matrix.python-version }}-
            venv-dev-${{ runner.os }}-py-
            venv-dev-${{ runner.os }}-
      # - name: Install dependencies
      #   if: steps.cache-dev-deps.outputs.cache-hit != 'true'
      #   run: |
      #     poetry config virtualenvs.in-project true
      #     poetry install
      - name: Install dependencies
        if: steps.cache-dev-deps.outputs.cache-hit != 'true'
        env:
          _USER: runner
          _GROUP: staff
          _GITHUB_CI: 1
          _TRAVIS_CI: 0
        run: |
          date -u
          mkdir build
          date +%s > build/stamp
          source .venv/bin/activate
          python -c 'import sys; print("\n".join(sys.path))' | grep site-packages | tee -a depslog

          date -u
          echo "----====Deps====----"

          # Add ansible.cfg to pick up roles path.
          # "{ echo '[defaults]'; echo 'roles_path = ../'; } >> ansible.cfg"
          mv ansible.cfg-travis ansible.cfg
          cat ansible.cfg

          # Add a hosts file.
          sudo mkdir -p /etc/ansible
          sudo touch /etc/ansible/hosts
          echo -e '[local]\nlocalhost ansible_connection=local' | sudo tee -a /etc/ansible/hosts > /dev/null

          # zsh -c 'echo "Completed installation of dependencies in $(printf "%0.2f" $(($[$(date +%s)-$(cat build/stamp)]/$((60.))))) minutes"'

      - name: Run tests
        env:
          _USER: runner
          _GROUP: staff
          _GITHUB_CI: 1
          _TRAVIS_CI: 0
        run: |
          source .venv/bin/activate
          _USER=runner
          _GROUP=staff
          _GITHUB_CI=1
          _TRAVIS_CI=0
          echo $_USER
          echo $_GROUP
          cp -a $(pwd) ~/.dotfiles
          ls -lta ~/.dotfiles
          cd ~/.dotfiles
          make sed-travis
          cat ~/.dotfiles/ansible/provision.sh
          source ~/.dotfiles/install.sh
          brew install bash || true
          bash -l -c 'pyenv versions'
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v1
      - name: Finish build
        env:
          _USER: runner
          _GROUP: staff
          _GITHUB_CI: 1
          _TRAVIS_CI: 0
        run: |
          date -u
          # zsh -c 'echo "Build completed in $(printf "%0.2f" $(($[$(date +%s)-$(cat build/stamp)]/$((60.))))) minutes"'
          cd ~/.dotfiles
          make bin_install
          cd ~/.dotfiles/test/fixtures
          brew install ffmpeg || true
          brew install gawk || true
          brew install gsed || true
          ffmpeg-all-batch -t "@reactionmemesTV"
